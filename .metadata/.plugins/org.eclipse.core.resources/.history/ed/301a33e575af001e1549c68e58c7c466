package Exercise01;

//1. The first approach for creating threads is implement Runnable interface (recommended)
public class YourTask1 implements Runnable {

	private String taskName;
	private int counter;

	public YourTask1(String taskName, int counter) {
		this.taskName = taskName;
		this.counter = counter;
	}

	@Override
	public void run() {
		for (int i = 0; i < counter; i++) {
			System.out.println("taskName" + "#" + taskName + "#" + i);
		}
	}

	public static void main(String[] args) {
		ImplementRunnableDemo r1 = new ImplementRunnableDemo("Print Task", 20);
		ImplementRunnableDemo r2 = new ImplementRunnableDemo("Distribute Task", 23);
		Thread t1 = new Thread(r1);
		Thread t2 = new Thread(r2);
		t1.start();
		t2.start();
	}
}

/*
 * Run and make a review for the result 
 * - Luồng "Distribute Task" và luồng
 * "Print Task" được xen kẽ, có nghĩa là chúng chạy đồng thời, và đầu ra của
 * chúng được trộn lẫn 
 * 
 * - Mỗi lần run sẽ trả về các kết quả khác nhau vì trong
 * môi trường đa luồng, thứ tự thực thi của các luồng có thể thay đổi sau mỗi
 * lần chạy do HĐH lên lịch thực hiện các luồng theo cách không dự đoán trước
 * 
 * - Trong môi trường đa luồng, khi không có các cơ chế đồng bộ hóa (synchronization) đúng đắn
 * sự cạnh tranh giữa các luồng có thể dẫn đến các kết quả không xác định.
 * 
 */

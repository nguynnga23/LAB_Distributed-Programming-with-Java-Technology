package Exercise04;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.ByteChannel;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;

import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;

public class CopyFile extends SwingWorker<Void, Integer> {

	@Override
	protected Void doInBackground() throws Exception {
		// TODO Auto-generated method stub
		Path sourcePath = Paths.get("source.txt");
		Path destinationPath = Paths.get("destination.txt");

		long fileSize = Files.size(sourcePath);
		long copiesByte = 0;

		try (ByteChannel sourceChannel = Files.newByteChannel(sourcePath, StandardOpenOption.READ);
				ByteChannel destinaionChannel = Files.newByteChannel(destinationPath, StandardOpenOption.WRITE,
						StandardOpenOption.CREATE)) {
			ByteBuffer buffer = ByteBuffer.allocate(1024);
			int bytesRead;
			while ((bytesRead = sourceChannel.read(buffer)) > 0) {
				buffer.flip();
				destinaionChannel.write(buffer);
				copiesByte += bytesRead;

				int progress = (int) ((copiesByte * 100) / fileSize);
				publish(progress);
				
				buffer.clear();

			}
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	protected void progress(java.util.List<Integer> chunks, JProgressBar p) {
		for(int progress : chunks) {
			p.setValue(progress);
		}
	}
	
	protected void done(JProgressBar p) {
		p.setValue(100);
		JOptionPane.showMessageDialog(this, "Copied successfully !!!");
	}

}
